#
# Copyright (C) 2025 Storia-LITE, an open-source software by TruveSoftware
# (a division of Vytruve.org)
# 
# Original Author: Pedro Henrique / phkaiser13
# 
# Description:
#   This manifest defines a Kubernetes Secret to store sensitive data such as
#   database passwords and JWT signing keys. Storing this information in a Secret
#   object is a security best practice, as it decouples sensitive data from the
#   application's image and declarative configuration. The values within a Secret
#   are stored in the cluster in a Base64-encoded format.
#
#   IMPORTANT: The values in this file are placeholders. You must generate your
#   own secrets and encode them before applying this manifest.
# 
# More information: https://vytruve.org
#
# SPDX-License-Identifier: Apache-2.0
#

apiVersion: v1
kind: Secret
metadata:
  # The name of the Secret, used to reference it in other Kubernetes objects (e.g., Deployments).
  name: storia-lite-secret
  # The namespace where this Secret will be created. It must be accessible to the Pods that will use it.
  namespace: storia-lite
# 'Opaque' is the default type and indicates that the Secret contains arbitrary key-value pairs.
type: Opaque
data:
  # --- Database Password ---
  # The password for the PostgreSQL database user.
  #
  # HOW-TO: To generate a Base64 value for your password, run the following command in your terminal,
  # replacing 'your-strong-password' with your actual password.
  # The '-n' flag is important to prevent a trailing newline character from being encoded.
  #
  #   echo -n 'your-strong-password' | base64
  #
  DB_PASSWORD: "REPLACE_WITH_YOUR_BASE64_ENCODED_PASSWORD" # e.g., U3Ryb25nUGFzc3dvcmQxMjMh

  # --- JWT Secret Key ---
  # A long, complex, and random string used to sign and verify JSON Web Tokens.
  # This key must be kept confidential.
  #
  # HOW-TO: First, generate a strong random key. You can use a password manager or a command like:
  #   openssl rand -base64 32
  #
  # Then, encode the generated key in Base64 using the echo command:
  #   echo -n 'your-super-secret-jwt-key' | base64
  #
  JWT_SECRET: "REPLACE_WITH_YOUR_BASE64_ENCODED_JWT_SECRET" # e.g., YW5vdGhlclZlcnlMb25nQW5kU2VjdXJlS2V5Rm9ySldUU2lnbmluZw==