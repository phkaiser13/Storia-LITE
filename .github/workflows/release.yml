name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version (e.g., v1.0.0)'
        required: true

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore src/System/StoriaSystem.sln
      - name: Build
        run: dotnet build src/System/StoriaSystem.sln --no-restore -c Release
      - name: Publish
        run: dotnet publish src/System/API/StorIA-Lite.Api.csproj -c Release -o ./publish
      - name: Zip the publish folder
        run: zip -r dotnet-release.zip ./publish
      - name: Upload .NET artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-release
          path: dotnet-release.zip

  build-tauri:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Add Windows target
        if: runner.os == 'Windows'
        run: rustup target add x86_64-pc-windows-msvc
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./src/Client/Tauri
      - name: Build Tauri application
        run: npm run tauri build
        working-directory: ./src/Client/Tauri
      - name: Upload Windows Artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-windows
          path: src/Client/Tauri/src-tauri/target/release/bundle/msi/*.msi
      - name: Upload macOS Artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-macos
          path: src/Client/Tauri/src-tauri/target/release/bundle/dmg/*.dmg
      - name: Upload Linux Artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-linux
          path: |
            src/Client/Tauri/src-tauri/target/release/bundle/appimage/*.AppImage
            src/Client/Tauri/src-tauri/target/release/bundle/deb/*.deb

  create-release:
    needs: [build-dotnet, build-tauri]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for dir in artifacts/*; do
            for file in "$dir"/*; do
              gh release upload ${{ github.event.inputs.version }} "$file"
            done
          done
