name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version (e.g., v1.0.0)'
        required: true

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore src/System/StoriaSystem.sln
      - name: Build
        run: dotnet build src/System/StoriaSystem.sln --no-restore -c Release
      - name: Publish
        run: dotnet publish src/System/API/StorIA-Lite.Api.csproj -c Release -o ./publish
      - name: Zip the publish folder
        run: zip -r dotnet-release.zip ./publish
      - name: Upload .NET artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-release
          path: dotnet-release.zip

  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]  # Ubuntu removido

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./src/WebClient

      - name: Build frontend
        run: npm run build
        working-directory: ./src/WebClient

      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: './src/Client/Tauri'

  create-release:
    needs: [build-dotnet, build-tauri]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: List downloaded artifacts for debugging
        run: ls -R artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for dir in artifacts/*; do
            for file in "$dir"/*; do
              gh release upload ${{ github.event.inputs.version }} "$file" --clobber
            done
          done
